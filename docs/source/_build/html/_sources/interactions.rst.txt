.. currentmodule:: dislash
.. _slash-command_constructor:

Slash-command constructor
=========================

.. autoclass:: SlashCommand

This tool allows to build slash-commands for further registration.
Registering a new command is **required** due to the way Discord parses slash-commands.

| 1. User inputs data
| 2. Discord converts this data into command args
| 3. Discord API sends converted data to your app

The second step is never completed if your command isn't registered.
There're 2 types of slash-commands: global and local (per guild).

.. topic:: Note

    | **Global** command registration takes more than **1 hour**.
    | **Guild** command registration is **instant**.

SlashCommand
----------------
::

    interactions.SlashCommand(name: str, description: str, options: List[Option]=None)

A base class for building slash-commands.

Parameters
^^^^^^^^^^

 - **name** (``str``) - the name of command
 - **description** (``str``) - the description of command
 - **options** (``List[Option]``) - list of command arguments (or subcommands in some cases)

Attributes
^^^^^^^^^^

 - **name**
 - **description**
 - **options**

Methods
^^^^^^^

::

    add_option(option: Option)

|    Adds an option to the list of options.

Option
------

.. code-block:: python

    class interactions.Option(
        name: str,
        description: str,
        type: Type,
        required: bool=False,
        options: List[Option]=None,
        choices: List[OptionChoice]=None
    )

| This class represents a command option.

Parameters
^^^^^^^^^^

 - **name**
 - **description**
 - **type**
 - **required**
 - **options**
 - **choices**

| There're 3 possible use-cases for options:
| 1. Each option is an **argument**
| 2. Each option is a **sub-command**
| 3. Each option represents a **group of sub-commands**

| In order to identify the use-case, there's such argument as ``type``
| For example, here's a command with 2 integer arguments:

Slash-command response
======================